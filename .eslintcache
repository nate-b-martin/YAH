[{"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\index.tsx":"1","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\App.tsx":"3","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Layouts\\FullLayout.tsx":"4","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\index.tsx":"5","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\Header.tsx":"6","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\About\\About.tsx":"7","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\Gallery.tsx":"8","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\Pokemon.tsx":"9","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\Pokedex.tsx":"10","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\galleryPageContent.ts":"11","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\aboutPageContent.ts":"12","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\MainContent.tsx":"13","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\buttons\\HeaderLinkButton.tsx":"14","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\pokedexPageContent.ts":"15","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\cards\\PokemonCard.tsx":"16","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\components\\GalleryTile.tsx":"17","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\components\\configs\\flickrConfigs.ts":"18","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\utils\\FlickrApi.ts":"19","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\hooks\\useFlickr.tsx":"20"},{"size":688,"mtime":1613169112385,"results":"21","hashOfConfig":"22"},{"size":436,"mtime":1607009854006,"results":"23","hashOfConfig":"22"},{"size":334,"mtime":1613168519842,"results":"24","hashOfConfig":"22"},{"size":1116,"mtime":1614022059191,"results":"25","hashOfConfig":"22"},{"size":108,"mtime":1607028868539,"results":"26","hashOfConfig":"22"},{"size":3888,"mtime":1613168566163,"results":"27","hashOfConfig":"22"},{"size":325,"mtime":1612228680033,"results":"28","hashOfConfig":"22"},{"size":3845,"mtime":1642462380696,"results":"29","hashOfConfig":"22"},{"size":1920,"mtime":1613170170181,"results":"30","hashOfConfig":"22"},{"size":4100,"mtime":1616014846736,"results":"31","hashOfConfig":"22"},{"size":307,"mtime":1612228680039,"results":"32","hashOfConfig":"22"},{"size":381,"mtime":1612228680038,"results":"33","hashOfConfig":"22"},{"size":1593,"mtime":1612228680027,"results":"34","hashOfConfig":"22"},{"size":1079,"mtime":1613168766959,"results":"35","hashOfConfig":"22"},{"size":271,"mtime":1612228680040,"results":"36","hashOfConfig":"22"},{"size":1676,"mtime":1612228680030,"results":"37","hashOfConfig":"22"},{"size":2200,"mtime":1614969440510,"results":"38","hashOfConfig":"22"},{"size":166,"mtime":1614099524365,"results":"39","hashOfConfig":"22"},{"size":1118,"mtime":1614196484227,"results":"40","hashOfConfig":"22"},{"size":2347,"mtime":1614971302520,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1a6m9yc",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\index.tsx",[],["87","88"],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\App.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Layouts\\FullLayout.tsx",["89"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../../components/Header';\r\nimport About from '../About/About';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport { Pokedex, Pokemon }from '../PokeDex/index';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// import classes from '*.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: theme.mixins.toolbar,\r\n})); \r\n\r\n\r\n\r\nconst FullLayout = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <Header/>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Switch>\r\n            <Route exact path=\"/\" render={(props:any) => <About {...props} />} />\r\n            <Route exact path=\"/gallery\" render={(props:any) => <Gallery {...props} />} />\r\n            <Route exact path=\"/pokedex\" render={(props: any) => <Pokedex {...props}/>}/>\r\n            <Route exact path=\"/:pokemonId\" render={(props:any) => <Pokemon {...props}/>}/>\r\n        </Switch>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FullLayout;","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\index.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\Header.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\About\\About.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\Gallery.tsx",["90","91","92","93","94"],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\Pokemon.tsx",["95"],"import React, { useState, useEffect } from 'react';\r\nimport { Typography, CircularProgress, Button } from '@material-ui/core';\r\nimport PokemonCard from '../../components/cards/PokemonCard';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\n\r\nconst toFirstCharUpperCase = (name:string) => \r\n   name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\nconst Pokemon = (props:any) => {\r\n   const { history, match } = props;\r\n   const { params } = match;\r\n   const { pokemonId } = params;\r\n   const [pokemon, setPokemon] = useState<any | undefined>(undefined);\r\n\r\n   useEffect(() => {\r\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\r\n      .then(function (response){\r\n         const { data } = response;\r\n         setPokemon(data);\r\n         console.log(data);\r\n      })\r\n      .catch(function (error){\r\n         setPokemon(false);\r\n      });\r\n   }, [pokemonId]);\r\n\r\n   const generatePokemonCard = () => {\r\n      const { name, id, height, weight, sprites } = pokemon;\r\n      const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n      const { front_default } = sprites;\r\n      return (\r\n         <Grid item xs={12}>\r\n            <PokemonCard\r\n               id={id}\r\n               title={toFirstCharUpperCase(name)}\r\n               pokemonName={toFirstCharUpperCase(name)}\r\n               image={fullImageUrl}\r\n               height={height}\r\n               weight={weight}\r\n            />\r\n         </Grid>\r\n      );\r\n   }\r\n\r\n   return (\r\n   <>\r\n      {pokemon === undefined && <CircularProgress/>}\r\n      {pokemon !== undefined && pokemon && generatePokemonCard()}\r\n      {pokemon === false && <Typography>Pokemon not found</Typography> }\r\n      {pokemon !== undefined && (\r\n         <Button variant=\"contained\" onClick={() => history.push(\"/pokedex\")}>\r\n            Back To PokeDex\r\n         </Button>\r\n      )}\r\n   </>\r\n   );\r\n};\r\n\r\nexport default Pokemon;","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\PokeDex\\Pokedex.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\galleryPageContent.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\aboutPageContent.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\MainContent.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\buttons\\HeaderLinkButton.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\pageContent\\pokedexPageContent.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\components\\cards\\PokemonCard.tsx",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\components\\GalleryTile.tsx",["96","97","98","99","100","101"],"import React, {useState, MouseEvent} from 'react';\r\nimport _ from 'lodash';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { GridListTile } from '@material-ui/core';\r\nimport FlickrApi from '../utils/FlickrApi';\r\nimport flickrConfig from './configs/flickrConfigs';\r\nimport { SettingsPowerRounded } from '@material-ui/icons';\r\n\r\ntype GalleryTileProps = {\r\n  key:number;\r\n  imagePath:string;\r\n  height:number;\r\n  width:number;\r\n  cols?:number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    gridListTile: {\r\n      padding: \"3px\",\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst getLargePicture = async (e: MouseEvent) => {\r\n    const src = e.currentTarget.getAttribute('src');\r\n    const id = src?.match(\"(\\\\d+)_\")?.pop();\r\n\r\n    const { Key, Secret, userID } = flickrConfig;\r\n    const api = new FlickrApi(Key, Secret, userID);\r\n\r\n    const response = await api.getPhotoSizes(id);\r\n    const sizeArr = _.get(response, 'data.sizes.size[9]');\r\n    const { source, width, height } = sizeArr;\r\n    return {imagePath: source, height, width}\r\n}\r\n\r\nconst GalleryTile = (props:GalleryTileProps) => {\r\n  const classes = useStyles();\r\n  const [largePicture, setLargePicture] = useState<string>('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = async (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    const largePicture = await getLargePicture(e);\r\n    console.log(largePicture);\r\n    setLargePicture(largePicture.imagePath);\r\n\r\n    //TODO: Modal with large image. \r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <GridListTile key={props.key} \r\n      className={classes.gridListTile} \r\n      cols={props.cols} \r\n    >\r\n      <img src={props.imagePath}\r\n        onClick={handleClick}\r\n      />\r\n    </GridListTile>\r\n  );\r\n}\r\n\r\nexport default GalleryTile;","C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\components\\configs\\flickrConfigs.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\utils\\FlickrApi.ts",[],"C:\\Users\\chaab\\Desktop\\YAH Typescript\\my-app\\src\\modules\\Gallery\\hooks\\useFlickr.tsx",["102","103","104","105","106","107","108"],"import {useState, useEffect} from 'react';\r\nimport _ from 'lodash';\r\nimport FlickrApi from '../utils/FlickrApi'\r\nimport flickrConfig from '../components/configs/flickrConfigs';\r\nimport {PictureObject} from '../types/GalleryTypes';\r\n\r\nexport const useFlickr = (albumTitle:string):Array<PictureObject> => {\r\n  const apiKey = flickrConfig.Key;\r\n  const apiSecret = flickrConfig.Secret;\r\n  const userID = flickrConfig.userID;\r\n  const api = new FlickrApi(apiKey, apiSecret, userID);\r\n  const [photosetID, setPhotosetID] = useState<string>('');\r\n  const [photoIDs, setPhotoIDs] = useState<Array<String>>([]);\r\n  const [galleryPictures, setGalleryPictures] = useState<Array<PictureObject>>([]);\r\n  const [largePicture, setLargePicture] = useState<string>('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect( () => {\r\n    const getPhotoSetIdByTitle = (set:Object, title?:String):string => {\r\n      title = _.get(set, 'title._content');\r\n      console.log(`Title: ${title}`);\r\n      if(title === albumTitle) {\r\n        console.log(`Setting photo set id`);\r\n        const pid = _.get(set, 'id');\r\n        setPhotosetID(pid);\r\n        return pid;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    async function retrieve() {\r\n      //Get photo set ID\r\n      let response = await api.getPhotoSetID(albumTitle);\r\n\r\n      const photosets = _.get(response, 'data.photosets.photoset'); // array with photosets\r\n      const setID = _.map(photosets, getPhotoSetIdByTitle).pop();\r\n\r\n      //Get photo IDs from set ID\r\n      response = await api.getPhotosFromSet(setID);\r\n\r\n      const photoArr = _.get(response, \"data.photoset.photo\");\r\n      const ids = _.map(photoArr, (photo) => {return _.get(photo, 'id')});\r\n      setPhotoIDs(ids);\r\n\r\n      const pictureSet = _.map(ids, async (id, index) => {\r\n        const response = await api.getPhotoSizes(id);\r\n        const sizeArr = _.get(response, 'data.sizes.size[6]');\r\n        const { source, width, height } = sizeArr;\r\n        const pictureObject:PictureObject = {\r\n          key: index,\r\n          imagePath: source,\r\n          height,\r\n          width,\r\n        }\r\n        console.log(`picture object: ${JSON.stringify(pictureObject)}`);\r\n        return pictureObject;\r\n      })\r\n\r\n      setGalleryPictures(await Promise.all(pictureSet));\r\n    }\r\n\r\n    retrieve();\r\n\r\n  }, []);\r\n\r\n  return galleryPictures\r\n}",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":18,"column":9,"nodeType":"115","messageId":"116","endLine":18,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"118","line":11,"column":11,"nodeType":"115","messageId":"116","endLine":11,"endColumn":14},{"ruleId":"113","severity":1,"message":"119","line":48,"column":22,"nodeType":"115","messageId":"116","endLine":48,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":52,"column":3,"nodeType":"115","endLine":52,"endColumn":12,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"123","line":58,"column":9,"nodeType":"115","messageId":"116","endLine":58,"endColumn":20},{"ruleId":"113","severity":1,"message":"124","line":32,"column":15,"nodeType":"115","messageId":"116","endLine":32,"endColumn":28},{"ruleId":"113","severity":1,"message":"125","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":30},{"ruleId":"113","severity":1,"message":"126","line":51,"column":10,"nodeType":"115","messageId":"116","endLine":51,"endColumn":22},{"ruleId":"113","severity":1,"message":"127","line":52,"column":10,"nodeType":"115","messageId":"116","endLine":52,"endColumn":14},{"ruleId":"113","severity":1,"message":"128","line":63,"column":9,"nodeType":"115","messageId":"116","endLine":63,"endColumn":19},{"ruleId":"113","severity":1,"message":"129","line":67,"column":9,"nodeType":"115","messageId":"116","endLine":67,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":76,"column":7,"nodeType":"132","endLine":78,"endColumn":9},{"ruleId":"113","severity":1,"message":"133","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":20},{"ruleId":"113","severity":1,"message":"134","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":15,"column":10,"nodeType":"115","messageId":"116","endLine":15,"endColumn":22},{"ruleId":"113","severity":1,"message":"135","line":15,"column":24,"nodeType":"115","messageId":"116","endLine":15,"endColumn":39},{"ruleId":"113","severity":1,"message":"127","line":16,"column":10,"nodeType":"115","messageId":"116","endLine":16,"endColumn":14},{"ruleId":"113","severity":1,"message":"136","line":16,"column":16,"nodeType":"115","messageId":"116","endLine":16,"endColumn":23},{"ruleId":"120","severity":1,"message":"137","line":64,"column":6,"nodeType":"138","endLine":64,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'MouseEvent' is defined but never used.","'Box' is defined but never used.","'setAlbumTitle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDataFetched'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [galleryPictures.length] as a second argument to the useEffect Hook.",["142"],"'handleAlbum' is assigned a value but never used.","'front_default' is assigned a value but never used.","'SettingsPowerRounded' is defined but never used.","'largePicture' is assigned a value but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'photosetID' is assigned a value but never used.","'photoIDs' is assigned a value but never used.","'setLargePicture' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'albumTitle' and 'api'. Either include them or remove the dependency array.","ArrayExpression",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Add dependencies array: [galleryPictures.length]",{"range":"148","text":"149"},"Update the dependencies array to be: [albumTitle, api]",{"range":"150","text":"151"},[1922,1922],", [galleryPictures.length]",[2312,2314],"[albumTitle, api]"]