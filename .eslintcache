[{"/home/nathan/projects/YAH Typescript/YAH/src/index.tsx":"1","/home/nathan/projects/YAH Typescript/YAH/src/reportWebVitals.ts":"2","/home/nathan/projects/YAH Typescript/YAH/src/components/App.tsx":"3","/home/nathan/projects/YAH Typescript/YAH/src/components/Header.tsx":"4","/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/index.tsx":"5","/home/nathan/projects/YAH Typescript/YAH/src/modules/About/About.tsx":"6","/home/nathan/projects/YAH Typescript/YAH/src/modules/Gallery/Gallery.tsx":"7","/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/Pokemon.tsx":"8","/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/Pokedex.tsx":"9","/home/nathan/projects/YAH Typescript/YAH/src/components/MainContent.tsx":"10","/home/nathan/projects/YAH Typescript/YAH/src/pageContent/aboutPageContent.ts":"11","/home/nathan/projects/YAH Typescript/YAH/src/pageContent/galleryPageContent.ts":"12","/home/nathan/projects/YAH Typescript/YAH/src/pageContent/pokedexPageContent.ts":"13","/home/nathan/projects/YAH Typescript/YAH/src/components/buttons/HeaderLinkButton.tsx":"14","/home/nathan/projects/YAH Typescript/YAH/src/modules/Layouts/FullLayout.tsx":"15","/home/nathan/projects/YAH Typescript/YAH/src/components/cards/PokemonCard.tsx":"16","/home/nathan/projects/YAH Typescript/YAH/src/components/cards/GalleryCard.tsx":"17","/home/nathan/projects/YAH Typescript/YAH/src/utils/FlickrApi/FlickrApi.ts":"18","/home/nathan/projects/YAH Typescript/YAH/src/configs/flickrConfigs.ts":"19"},{"size":710,"mtime":1609274445434,"results":"20","hashOfConfig":"21"},{"size":436,"mtime":1608674261747,"results":"22","hashOfConfig":"21"},{"size":393,"mtime":1611953249144,"results":"23","hashOfConfig":"21"},{"size":3734,"mtime":1609274626918,"results":"24","hashOfConfig":"21"},{"size":102,"mtime":1608674261747,"results":"25","hashOfConfig":"21"},{"size":311,"mtime":1608744548397,"results":"26","hashOfConfig":"21"},{"size":4559,"mtime":1611957842028,"results":"27","hashOfConfig":"21"},{"size":1906,"mtime":1609341593805,"results":"28","hashOfConfig":"21"},{"size":3798,"mtime":1608749510020,"results":"29","hashOfConfig":"21"},{"size":1529,"mtime":1608753151001,"results":"30","hashOfConfig":"21"},{"size":372,"mtime":1608744162289,"results":"31","hashOfConfig":"21"},{"size":298,"mtime":1608745133405,"results":"32","hashOfConfig":"21"},{"size":263,"mtime":1608745284235,"results":"33","hashOfConfig":"21"},{"size":1081,"mtime":1609190004811,"results":"34","hashOfConfig":"21"},{"size":1236,"mtime":1611953022989,"results":"35","hashOfConfig":"21"},{"size":1615,"mtime":1609341585170,"results":"36","hashOfConfig":"21"},{"size":1824,"mtime":1611957539188,"results":"37","hashOfConfig":"21"},{"size":1141,"mtime":1609483346888,"results":"38","hashOfConfig":"21"},{"size":135,"mtime":1609356682242,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"uf0dgi",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},"/home/nathan/projects/YAH Typescript/YAH/src/index.tsx",["86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Grid from \"@material-ui/core/Grid\";\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"/home/nathan/projects/YAH Typescript/YAH/src/reportWebVitals.ts",[],"/home/nathan/projects/YAH Typescript/YAH/src/components/App.tsx",["89","90","91","92"],"/home/nathan/projects/YAH Typescript/YAH/src/components/Header.tsx",["93","94","95"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport HeaderLinkButton from './buttons/HeaderLinkButton';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    [theme.breakpoints.down(\"xs\")]: {\n      flexGrow: 1\n    }\n  },\n  headerOptions: {\n    display: \"flex\",\n    flex: \"auto\",\n    justifyContent: \"space-around\"\n  }\n}));\n\nconst Header:React.FC = (props:any) => {\n  const { history } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleMenu = (event:any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClick = (pageURL:any) => {\n    history.push(pageURL);\n    setAnchorEl(null);\n  };\n\n  const handleButtonClick = (pageURL:any) => {\n    history.push(pageURL);\n  };\n\n  const menuItems = [\n    {\n      menuTitle: \"About\",\n      pageURL: \"/\"\n    },\n    {\n      menuTitle: \"Gallery\",\n      pageURL: \"/gallery\"\n    },\n    {\n      menuTitle: \"Pokedex\",\n      pageURL: \"/pokedex\"\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            YAH \n          </Typography>\n          {isMobile ? (\n            <>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={handleMenu}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n              >\n                {menuItems.map(menuItem => {\n                  const { menuTitle, pageURL } = menuItem;\n                  return (\n                    <MenuItem onClick={() => handleMenuClick(pageURL)}>\n                      {menuTitle}\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            </>\n          ) : (\n            <div className={classes.headerOptions}>\n              <HeaderLinkButton\n                linkTitle=\"About\"\n                path=\"/\"\n                history={history}\n              />\n              <HeaderLinkButton \n                linkTitle=\"Gallery\"\n                path=\"/gallery\"\n                history={history}\n              />\n              <HeaderLinkButton\n                linkTitle=\"Pokedex\"\n                path=\"/pokedex\"\n                history={history}\n              />\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/index.tsx",[],"/home/nathan/projects/YAH Typescript/YAH/src/modules/About/About.tsx",[],"/home/nathan/projects/YAH Typescript/YAH/src/modules/Gallery/Gallery.tsx",["96","97","98","99","100","101","102"],"/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/Pokemon.tsx",["103","104","105","106","107"],"import React, { useState, useEffect } from 'react';\nimport { Typography, Link, CircularProgress, Button } from '@material-ui/core';\nimport PokemonCard from '../../components/cards/PokemonCard';\nimport Grid from '@material-ui/core/Grid';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n\nconst toFirstCharUpperCase = (name:string) => \n   name.charAt(0).toUpperCase() + name.slice(1);\n\nconst Pokemon = (props:any) => {\n   const { history, match } = props;\n   const { params } = match;\n   const { pokemonId } = params;\n   const [pokemon, setPokemon] = useState<any | undefined>(undefined);\n\n   useEffect(() => {\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\n      .then(function (response){\n         const { data } = response;\n         setPokemon(data);\n         console.log(data);\n      })\n      .catch(function (error){\n         setPokemon(false);\n      });\n   }, [pokemonId]);\n\n   const generatePokemonCard = () => {\n      const { name, id, species, height, weight, types, sprites } = pokemon;\n      const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n      const { front_default } = sprites;\n      return (\n         <Grid item xs={12}>\n            <PokemonCard\n               id={id}\n               title={toFirstCharUpperCase(name)}\n               pokemonName={toFirstCharUpperCase(name)}\n               image={fullImageUrl}\n               height={height}\n               weight={weight}\n            />\n         </Grid>\n      );\n   }\n\n   return (\n   <>\n      {pokemon === undefined && <CircularProgress/>}\n      {pokemon !== undefined && pokemon && generatePokemonCard()}\n      {pokemon === false && <Typography>Pokemon not found</Typography> }\n      {pokemon !== undefined && (\n         <Button variant=\"contained\" onClick={() => history.push(\"/pokedex\")}>\n            Back To PokeDex\n         </Button>\n      )}\n   </>\n   );\n};\n\nexport default Pokemon;","/home/nathan/projects/YAH Typescript/YAH/src/modules/PokeDex/Pokedex.tsx",["108","109","110"],"import React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, Grid, Card, CardContent, CardMedia, CircularProgress, Typography, TextField } from '@material-ui/core';\nimport { makeStyles, Theme, fade } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\nimport content from '../../pageContent/pokedexPageContent';\nimport MainContent from '../../components/MainContent';\n\nconst useStyles = makeStyles(theme => ({\n   pokedexContainer: {\n      paddingTop: '20px',\n      paddingLeft: '50px',\n      paddingRight: '50px',\n   },\n   cardMedia: {\n      margin: \"auto\",\n   },\n   cardContent: {\n      textAlign: \"center\",\n   },\n   searchContainer: {\n      display: \"flex\",\n      backgroundcolor: fade(theme.palette.common.white, 0.15),\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      justifyContent: \"center\"\n   },\n   searchIcon: {\n      alignSelf: \"flex-end\",\n      marginBottom: \"5px\"\n   },\n   searchInput: {\n      width: \"200px\",\n      margin: \"5px\",\n   }\n}));\n\ninterface PokemonData {\n   id:number,\n   name:string,\n   sprite:string,\n}\n\nconst toFirstCharUpperCase = (name:string) => \n   name.charAt(0).toUpperCase() + name.slice(1);\n\n\nconst Pokedex:React.FC = (props:any) => {\n   const { history } = props;\n   const classes = useStyles();\n   const [pokemonData, setPokemonData] = useState<any>({});\n   const [filter, setFilter] = useState(\"\");\n\n   const handleSearchChange = (e:any) => {\n      setFilter(e.target.value);\n   }\n\n   useEffect(() => {\n      axios.get('https://pokeapi.co/api/v2/pokemon?limit=807')\n      .then(function(response){\n         const { data } = response;\n         const { results } = data;\n         const newPokemonData = Array<PokemonData>();\n         results.forEach((pokemon: { name: any; }, index: number) => {\n            newPokemonData[index + 1] = {\n               id: index + 1,\n               name: pokemon.name,\n               sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`,\n            }\n         });\n         setPokemonData(newPokemonData);\n      });\n   }, []);\n   \n   const getPokemonCard = (pokemonId:number) => {\n      const { id, name, sprite } = pokemonData[pokemonId];\n      return (\n         <Grid item xs={4} key={pokemonId}>\n            <Card onClick = {() => history.push(`/${pokemonId}`)}>\n               <CardMedia\n                  className={classes.cardMedia}\n                  image={sprite}\n                  style={{width: \"130px\", height: \"130px\"}}\n               />\n               <CardContent className={classes.cardContent}>\n                  <Typography>{`${id}. ${toFirstCharUpperCase(name)}`}</Typography>\n               </CardContent>\n            </Card>\n         </Grid>\n      );\n   }\n\n   return (\n      <div>\n      <MainContent\n         title={content.title}\n         mainContent={content.mainContent}\n      />\n      {pokemonData ? (\n         <Grid container spacing={2} className={classes.pokedexContainer} >\n            <Grid item xs={12} key=\"searchInput\">\n               <div className={classes.searchContainer}>\n                  <SearchIcon className={classes.searchIcon}/>\n                  <TextField \n                     onChange={handleSearchChange}\n                     className={classes.searchInput}\n                     label=\"Pokemon\"\n                     variant=\"standard\"\n                  />\n               </div>\n            </Grid>\n               {Object.keys(pokemonData).map((pokemonId) => \n                  pokemonData[pokemonId].name.includes(filter) && \n                  getPokemonCard(parseInt(pokemonId)))}\n         </Grid>\n      ) : (\n         <CircularProgress/>\n      )}\n      </div>\n   );\n};\n\nexport default Pokedex;","/home/nathan/projects/YAH Typescript/YAH/src/components/MainContent.tsx",[],"/home/nathan/projects/YAH Typescript/YAH/src/pageContent/aboutPageContent.ts",[],"/home/nathan/projects/YAH Typescript/YAH/src/pageContent/galleryPageContent.ts",[],"/home/nathan/projects/YAH Typescript/YAH/src/pageContent/pokedexPageContent.ts",[],"/home/nathan/projects/YAH Typescript/YAH/src/components/buttons/HeaderLinkButton.tsx",["111","112","113"],"import React, { EventHandler, SyntheticEvent } from 'react'\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { History } from 'history';\n\ninterface LinkButtonProps {\n  linkTitle:string;\n  path:string;\n  history: History;\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  buttonText: {\n    color:\"white\"\n  },\n}));\n\n\nconst HeaderLinkButton = (props:LinkButtonProps) => {\n  const { history } = props;\n  const classes = useStyles();\n\n  const handleButtonClick = (pageURL:string) => {\n    history.push(pageURL);\n  };\n\n    return (\n      <div>\n            <Button \n                onClick={() => handleButtonClick(props.path)}\n            >\n              <Link component=\"button\"\n              >\n                <Typography className={classes.buttonText}>\n                  {props.linkTitle}\n                </Typography>\n              </Link>\n            </Button>\n      </div>\n    )\n};\n\nexport default HeaderLinkButton;\n","/home/nathan/projects/YAH Typescript/YAH/src/modules/Layouts/FullLayout.tsx",["114","115"],"/home/nathan/projects/YAH Typescript/YAH/src/components/cards/PokemonCard.tsx",[],"/home/nathan/projects/YAH Typescript/YAH/src/components/cards/GalleryCard.tsx",["116","117","118","119","120","121","122","123"],"/home/nathan/projects/YAH Typescript/YAH/src/utils/FlickrApi/FlickrApi.ts",["124"],"import axios from 'axios';\nimport { PhotoSetRequest } from './FlickrApiTypes';\n\nclass FlickrApi {\n\n    apiKey:string;\n    apiSecret:string;\n    userId:string;\n\n    constructor(key:string, secret:string, userId:string) {\n        this.apiKey = key;\n        this.apiSecret = secret;\n        this.userId= userId;\n    }\n\n\n    async getPhotoSetID(photosetTitle:string){\n        const url = `https://www.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=${this.apiKey}&user_id=${this.userId}&format=json&nojsoncallback=1`;\n        return await axios.get(url);\n    }\n    \n    async getPhotosFromSet(photoSetID:string) {\n        const url = `https://www.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=${this.apiKey}&photoset_id=${photoSetID}&user_id=${this.userId}&format=json&nojsoncallback=1`\n        return await axios.get(url);\n    }\n\n    async getPhotoSizes(photoID:any) {\n        const url = `https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=${this.apiKey}&photo_id=${photoID}&format=json&nojsoncallback=1`;\n        return await axios.get(url);\n    }\n\n}\n\nexport default FlickrApi;","/home/nathan/projects/YAH Typescript/YAH/src/configs/flickrConfigs.ts",["125"],"export default {\n    //Flickr \n    Key:'867f433e4deb6fe21e76b3578aec61a7',\n    Secret:'8e5b1f74b2b8551a',\n    userID:'161564231@N07',\n}",{"ruleId":"126","severity":1,"message":"127","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"134","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"136","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"137","line":2,"column":29,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"138","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":14},{"ruleId":"126","severity":1,"message":"139","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":12},{"ruleId":"126","severity":1,"message":"140","line":52,"column":9,"nodeType":"128","messageId":"129","endLine":52,"endColumn":26},{"ruleId":"126","severity":1,"message":"141","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"142","line":2,"column":29,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"143","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":25},{"ruleId":"126","severity":1,"message":"144","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":24},{"ruleId":"126","severity":1,"message":"145","line":33,"column":25,"nodeType":"128","messageId":"129","endLine":33,"endColumn":41},{"ruleId":"126","severity":1,"message":"146","line":35,"column":22,"nodeType":"128","messageId":"129","endLine":35,"endColumn":35},{"ruleId":"126","severity":1,"message":"147","line":122,"column":9,"nodeType":"128","messageId":"129","endLine":122,"endColumn":18},{"ruleId":"126","severity":1,"message":"139","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},{"ruleId":"126","severity":1,"message":"148","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":9},{"ruleId":"126","severity":1,"message":"149","line":31,"column":25,"nodeType":"128","messageId":"129","endLine":31,"endColumn":32},{"ruleId":"126","severity":1,"message":"150","line":31,"column":50,"nodeType":"128","messageId":"129","endLine":31,"endColumn":55},{"ruleId":"126","severity":1,"message":"151","line":33,"column":15,"nodeType":"128","messageId":"129","endLine":33,"endColumn":28},{"ruleId":"126","severity":1,"message":"152","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"153","line":2,"column":18,"nodeType":"128","messageId":"129","endLine":2,"endColumn":25},{"ruleId":"126","severity":1,"message":"141","line":3,"column":22,"nodeType":"128","messageId":"129","endLine":3,"endColumn":27},{"ruleId":"126","severity":1,"message":"154","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"155","line":1,"column":31,"nodeType":"128","messageId":"129","endLine":1,"endColumn":45},{"ruleId":"126","severity":1,"message":"156","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"126","severity":1,"message":"136","line":8,"column":17,"nodeType":"128","messageId":"129","endLine":8,"endColumn":27},{"ruleId":"126","severity":1,"message":"157","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":15},{"ruleId":"126","severity":1,"message":"158","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":22},{"ruleId":"126","severity":1,"message":"159","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":19},{"ruleId":"126","severity":1,"message":"138","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"160","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":19},{"ruleId":"126","severity":1,"message":"161","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"126","severity":1,"message":"162","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":18},{"ruleId":"126","severity":1,"message":"163","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":44,"column":7,"nodeType":"166","endLine":44,"endColumn":35},{"ruleId":"126","severity":1,"message":"143","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":1,"column":1,"nodeType":"169","endLine":6,"endColumn":2},"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'useState' is defined but never used.","'Route' is defined but never used.","'RouteProps' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'handleButtonClick' is assigned a value but never used.","'Theme' is defined but never used.","'fade' is defined but never used.","'PhotoSetRequest' is defined but never used.","'CircularProgress' is defined but never used.","'setPhotosetTitle' is assigned a value but never used.","'setPhotoAlbum' is assigned a value but never used.","'paragragh' is assigned a value but never used.","'_' is defined but never used.","'species' is assigned a value but never used.","'types' is assigned a value but never used.","'front_default' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'EventHandler' is defined but never used.","'SyntheticEvent' is defined but never used.","'useTheme' is defined but never used.","'classes' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]